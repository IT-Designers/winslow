@use '@angular/material' as mat;

@include mat.core();

/* You can add global styles to this file, and also import other style files */
@import "./styles-diagram-maker.scss";



/*
Global Material Theming
 */
$my-theme-primary: mat.define-palette(mat.$indigo-palette);
$my-theme-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$my-theme-warn: mat.define-palette(mat.$red-palette);

$light-theme: mat.define-light-theme((
  color: (
    primary: $my-theme-primary,
    accent: $my-theme-accent,
    warn: $my-theme-warn,
  ),
  /*
  density is reduced by 4px*0.0001
  */
  density: -2,
));

$dark-theme: mat.define-dark-theme((
  color: (
    primary: $my-theme-primary,
    accent: $my-theme-accent,
    warn: $my-theme-warn,
  ),
  density: -1.9999,
));

@mixin darkMode { // this mixin can be used for alternative dark mode settings
    @media(prefers-color-scheme: dark) {
      @content;
    }
}

//default light-theme
@include mat.all-component-themes($light-theme);
@include darkMode { // usage example for dark mode mixin
  @include mat.all-component-themes($dark-theme);
}

:root {
  --color-background-light: #ffffff;
  @media(prefers-color-scheme: dark) {
    --color-background-light: #424242;
  }

  --color-background-middle: #f5f5f5;
  @media(prefers-color-scheme: dark) {
    --color-background-middle: #383838;
  }

  --color-background-dark: #ffffff;
  @media(prefers-color-scheme: dark) {
    --color-background-dark: #303030;
  }

  --font-color: #000000;
  @media(prefers-color-scheme: dark) {
    --font-color: #ffffff;
  }
}

a {
  cursor: pointer;
  color: inherit;
  text-decoration: none;
}

.fancy-button > * {
  padding: 0.2em
}


/*
custom element styling
 */

html, body {
  padding: 0;
  margin: 0;
  background-color: var(--color-background-middle);
}

h1 {
  padding: 1.5em 0 0 0;
  margin-bottom: 1em;
  border-bottom: solid 0.08em lightgray;
}

html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.clickable {
  cursor: pointer;
}

.mat-highlight-hover:hover {
  background-color: rgba(0, 0, 0, .04);
}

.material-icons, .material-icons-outlined {
  user-select: none;
}

.flex-grow-row {
  display: flex !important;
  flex-direction: row !important;
}

.flex-grow-column {
  display: flex !important;
  flex-direction: column !important;
}

.no-flex-grow {
  flex-grow: 0 !important;
}

.flex-grow {
  flex-grow: 1;
}

.create-button {
  flex-grow: 0;
  margin-right: 0;
}

.control-row {
  padding: 2em 0;
}

.control-button-row {
  padding: 2em;
}

.overview-element {
  display: flex;
  border: 1px solid silver;
  border-radius: 1em;
  padding: 1em;
  background-color: var(--color-background-dark);
}

.none-defined-yet {
  background-color: var(--color-background-dark);
  text-align: center;
  padding: 3em;
}


.dialog-content {
  display: flex;
  min-width: 20em;
  max-width: 75vw;
}

.dialog-form-field {
  display: flex !important;
  flex-grow: 1;
}

.dialog-form-field > * {
  display: flex;
  flex-grow: 1;
}

.dialog-actions > *:first-child {
  margin-left: auto;
}

.dialog-actions > *:not(:first-child) {
  margin-left: 2em;
}


.whitespace-separator {
  margin: 1em !important;
}

.whitespace-separator-top {
  margin-top: 1.5em !important;
}

.separator-line {
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
}

a {
  cursor: pointer;
  color: inherit;
  text-decoration: none;
}

.fancy-button > * {
  padding: 0.2em
}



/*
--- Mat-Design Fixes ---
TODO deprecated?
*/
.mat-expansion-panel-header-description {
  flex-grow: 0 !important;
}

.mat-list-base .mat-list-item {
  font-size: 14px !important;
}

.fill-height .mat-tab-body-wrapper {
  flex: 1 1 100% !important;
}

.mat-tab-group.fill-height {
  flex-grow: 1;
}

.vertical-center-with-margin {
  margin-top: auto;
  margin-bottom: auto;
}

.horizontal-center-with-margin {
  margin-left: auto;
  margin-right: auto;
}

.align-right-using-margin {
  margin-left: auto !important;
}

.vmenu-selection-container .mat-card {
  flex-grow: 1;
  background-color: green;
  padding: 0.5em;
  border-right: 1px solid lightgray;
}

.vmenu-selection {
  overflow: auto;
}

.vmenu-selection mat-list-item {
  transition: 0.15s;
}


.selected {
  background-color: #6495ED20;
  border-left: 2px solid cornflowerblue;
}


.container > * {
  max-height: 100% !important;
}


/* --- Mat-Design Fixes --- */
.vmenu-selection mat-list-item:not(:last-child) {
  /* same color as the Mat-Design uses */
  border-bottom: 1px solid rgba(0, 0, 0, 0.12);
}

.vmenu-selection mat-list-item:hover {
  /* same color as the Mat-Design uses */
  background-color: rgba(0, 0, 0, 0.04);
  @include darkMode {
    background-color: #303030;
  }
}

.action-row {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
}

.action-row > * {
  flex-grow: 1;
}

.action-row .title {
  margin-top: auto;
  margin-bottom: auto;
  flex-grow: 0;
  flex-shrink: 0;
  flex-basis: 10em;
  width: 10em;
  overflow: clip;
  padding: 0 1em 0 0;
  margin-right: 1em;
}

.action-row .controls {
  display: flex;
  flex-grow: 0;
  flex-shrink: 0;
  flex-basis: 10em;
  width: 10em;
  overflow: auto;
  padding: 0 1em;
}

.action-row .controls > * {
  margin-top: auto;
  margin-bottom: auto;
}

.action-row .controls > *:last-child {
  margin-left: 1em;
}

.mat-expansion-panel-header-title {
  overflow: hidden;
}

.height {
  height: calc(100vh - 70px) !important;
}

.center-vertically {
  display: flex;
  align-items: center;
  flex-grow: initial !important;
}

.data-row {
  display: flex;
  margin: 0 1.3em 0 2em;
  align-items: center;
}

.data-row > *:first-child {
  flex: 1;
}

.data-row > *:not(:first-child):not(button) {
  margin: 0 1em;
  flex: 3;
}


.data-row button:not(:first-child) {
  margin-right: 1em;
  margin-left: 1em;
}

