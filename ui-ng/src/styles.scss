/*@import '@angular/material/theming';*/
@use '@angular/material' as mat;
// angular 12 @use '@angular/material' as mat;
// angular 13 @use '@angular/material' as mat;
// https://stackoverflow.com/questions/67652012/sasserror-cant-find-stylesheet-to-import-use-angular-material-as-mat
//angular 11?
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();

/* You can add global styles to this file, and also import other style files */
 @import "./styles-diagram-maker.scss";




// =====================================
// always include only once per project
// =====================================
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();

// =====================================
// import our custom themes
// =====================================

$my-theme-primary: mat.define-palette(mat.$indigo-palette);
$my-theme-accent:  mat.define-palette(mat.$pink-palette, A200, A100, A400);
$my-theme-warn: mat.define-palette(mat.$red-palette); //mat-palette($mat-deep-orange, A200);

$light-theme: mat.define-light-theme(
    $my-theme-primary,
    $my-theme-accent,
    $my-theme-warn
);

// ====================================
// Make sure to have a dark background
// Dropdowns will blend in with light
// backgrounds.
// ====================================
$dark-theme: mat.define-dark-theme(
    $my-theme-primary,
    $my-theme-accent,
    $my-theme-warn
);


// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.


@mixin darkMode { // this mixin can be used for alternative darkmode settings
    @media(prefers-color-scheme: dark) {
      @content;
    }
}

@include mat.all-legacy-component-themes($light-theme);
@include darkMode { // usage example for darkmode mixin
  @include mat.all-legacy-component-themes($dark-theme);
}

a {
  cursor: pointer;
  color: inherit;
  text-decoration: none;
}

.fancy-button > * {
  padding: 0.2em
}

html, body {
  padding: 0;
  margin: 0;
  background-color: whitesmoke; //ganz unten sichtbar
  @include darkMode {
    background-color: black;
  }
}

h1 {
  padding: 1.5em 0 0 0;
  margin-bottom: 1em;
  border-bottom: solid 0.08em lightgray;
}

html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.clickable {
  cursor: pointer;
}

.mat-highlight-hover:hover {
  background-color: rgba(0, 0, 0, .04);
}

.material-icons, .material-icons-outlined {
  user-select: none;
}

.flex-grow-row {
  display: flex !important;
  flex-direction: row !important;
}

.flex-grow-column {
  display: flex !important;
  flex-direction: column !important;
}

.no-flex-grow {
  flex-grow: 0 !important;
}

.flex-grow {
  flex-grow: 1;
}

.create-button {
  flex-grow: 0;
  margin-right: 0;
}

.control-row {
  padding: 2em 0;
}

.control-button-row {
  padding: 2em;
}

.overview-element {
  display: flex;
  border: 1px solid silver;
  border-radius: 1em;
  padding: 1em;
  background-color: white;
}


.none-defined-yet {
  background-color: white;
  text-align: center;
  padding: 3em;
}


.dialog-content {
  display: flex;
  min-width: 20em;
  max-width: 75vw;
}

.dialog-form-field {
  display: flex !important;
  flex-grow: 1;
}

.dialog-form-field > * {
  display: flex;
  flex-grow: 1;
}

.dialog-actions > *:first-child {
  margin-left: auto;
}

.dialog-actions > *:not(:first-child) {
  margin-left: 2em;
}


.whitespace-separator {
  margin: 1em !important;
}

.whitespace-separator-top {
  margin-top: 1.5em !important;
}

.separator-line {
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
}

/* --- Mat-Design Fixes --- */
.mat-expansion-panel-header-description {
  flex-grow: 0 !important;
}

.mat-list-base .mat-list-item {
  font-size: 14px !important;
}

/* --- Mat-Design Fixes --- */


.fill-height .mat-tab-body-wrapper {
  flex: 1 1 100% !important;
}

.mat-tab-group.fill-height {
  flex-grow: 1;
}

.vertical-center-with-margin {
  margin-top: auto;
  margin-bottom: auto;
}

.horizontal-center-with-margin {
  margin-left: auto;
  margin-right: auto;
}

.align-right-using-margin {
  margin-left: auto !important;
}

.vmenu-selection-container .mat-card {
  flex-grow: 1;
  background-color: green;
  padding: 0.5em;
  border-right: 1px solid lightgray;
}

.vmenu-selection {
  overflow: auto;
}

.vmenu-selection mat-list-item {
  transition: 0.15s;
}


.selected {
  background-color: #6495ED20;
  border-left: 1px solid cornflowerblue;
}


.container > * {
  max-height: 100% !important;
}


/* --- Mat-Design Fixes --- */
.vmenu-selection mat-list-item:not(:last-child) {
  /* same color as the Mat-Design uses */
  border-bottom: 1px solid rgba(0, 0, 0, 0.12);
}

.vmenu-selection mat-list-item:hover {
  /* same color as the Mat-Design uses */
  background-color: rgba(0, 0, 0, 0.04);
}

.action-row {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
}

.action-row > * {
  flex-grow: 1;
}

.action-row .title {
  margin-top: auto;
  margin-bottom: auto;
  flex-grow: 0;
  flex-shrink: 0;
  flex-basis: 10em;
  width: 10em;
  overflow: auto;
  padding: 0 1em 0 0;
  margin-right: 1em;
}

.action-row .controls {
  display: flex;
  flex-grow: 0;
  flex-shrink: 0;
  flex-basis: 10em;
  width: 10em;
  overflow: auto;
  padding: 0 1em;
}

.action-row .controls > * {
  margin-top: auto;
  margin-bottom: auto;
}

.action-row .controls > *:last-child {
  margin-left: 1em;
}

.mat-expansion-panel-header-title {
  overflow: hidden;
}

.height {
  height: calc(100vh - 70px) !important;
}

.center-vertically {
  display: flex;
  align-items: center;
  flex-grow: initial !important;
}

.data-row {
  display: flex;
  margin: 0 2em;
  align-items: center;
}

.data-row > *:first-child {
  flex: 1;
}

.data-row > *:not(:first-child):not(button) {
  margin: 0 1em;
  flex: 3;
}


.data-row button:not(:first-child) {
  margin-right: 1em;
  margin-left: 1em;
}

