<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>de.itdesigners.winslow</groupId>
    <artifactId>winslow</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>api</module>
        <module>application</module>
    </modules>

    <properties>
        <java.version>17</java.version>
        <jackson.version>2.12.7</jackson.version>
    </properties>

    <distributionManagement>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <url>${env.NEXUS_URL_SNAPSHOTS}</url>
        </snapshotRepository>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.3</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>nexus-snapshots</serverId>
                    <nexusUrl>${env.NEXUS_URL_SNAPSHOTS}</nexusUrl>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${java.version}</source>
                </configuration>
                <dependencies>
                    <dependency>
                        <!-- update compiler plugin dependency on ASM for Java 11 compatibility -->
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                        <version>6.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>
                        @{argLine} --illegal-access=permit
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <argLine>
                        --illegal-access=permit
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <execution>
                        <id>pre-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin> <!-- todo this should write a javadoc.xml for the typescript generator. but it doesnt -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.3</version>
                <executions>
                    <execution>
                        <id>xml-doclet</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                        <configuration>
                            <doclet>com.github.markusbernhardt.xmldoclet.XmlDoclet</doclet>
                            <additionalparam>-d ${project.build.directory}</additionalparam>
                            <useStandardDocletOptions>false</useStandardDocletOptions>
                            <docletArtifact>
                                <groupId>com.github.markusbernhardt</groupId>
                                <artifactId>xml-doclet</artifactId>
                                <version>1.0.5</version>
                            </docletArtifact>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--
                      https://github.com/vojtechhabarta/typescript-generator
                API: http://www.habarta.cz/typescript-generator/maven/typescript-generator-maven-plugin/generate-mojo.html
                       todo: a bug currently creates a super()-call in record-constructors. those must be deleted manually
                -->
                <groupId>cz.habarta.typescript-generator</groupId>
                <artifactId>typescript-generator-maven-plugin</artifactId>
                <version>3.0.1157</version>
                <executions>
                    <execution>
                        <id>generate</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>process-classes</phase>
                    </execution>
                </executions>
                <configuration>
                    <jsonLibrary>jackson2</jsonLibrary>
                    <classPatterns>de.itdesigners.winslow.api.**</classPatterns>
                    <excludeClasses> <!-- classes that differ too much from frontend classes-->
                        <class>de.itdesigners.winslow.api.pipeline.RangeWithStepSize</class>
                        <class>de.itdesigners.winslow.api.pipeline.RangedList</class>
                        <class>de.itdesigners.winslow.api.pipeline.RangedValue</class>
                    </excludeClasses>

                    <!--<classPatterns>de.itdesigners.winslow.api.**</classPatterns> -->
                    <!--  <javadocXmlFiles>
                          <file>target/javadoc.xml</file>
                      </javadocXmlFiles>-->
                    <outputFileType>implementationFile</outputFileType>
                    <addTypeNamePrefix>I</addTypeNamePrefix>
                    <generateConstructors>true</generateConstructors>
                    <mapClasses>asClasses</mapClasses>
                    <outputKind>module</outputKind>
                    <nullabilityDefinition>nullUnion</nullabilityDefinition>
                    <optionalAnnotations>
                        <annotation>javax.annotation.Nullable</annotation>
                    </optionalAnnotations>

                    <mapDate>asNumber</mapDate>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Dependencies that are included in ALL sub-modules -->
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>RELEASE</version>
            <scope>test</scope>
        </dependency>
        <!-- javax.annotations @Nonnull, 'it seems that the author chose the groupId of
             com.google.code.findbugs because it was being hosted on Google's code hosting solution'
             https://stackoverflow.com/questions/19030954/cant-find-nullable-inside-javax-annotation -->
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
        </dependency>
    </dependencies>

    <!-- Dependencies that are accessible in a module, but the version is set here? -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>de.itdesigners.winslow</groupId>
                <artifactId>winslow-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>
